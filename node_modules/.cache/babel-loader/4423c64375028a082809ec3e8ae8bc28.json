{"ast":null,"code":"var _jsxFileName = \"/Users/tylercasperson/Desktop/FullStack/homework/NaturesCharmMemoryGame/src/App.js\";\nimport React, { Component } from 'react';\nimport './ClickyGame.css';\nimport NavBar from './NavBar';\nimport Instructions from './Instructions';\nimport Card from './Card';\nimport picture1 from \"./Card/images/picture1.jpg\";\nimport picture2 from \"./Card/images/picture2.jpg\";\nimport picture3 from \"./Card/images/picture3.jpg\";\nimport picture4 from \"./Card/images/picture4.jpg\";\nimport picture5 from \"./Card/images/picture5.jpg\";\nimport picture6 from \"./Card/images/picture6.jpg\";\nimport picture7 from \"./Card/images/picture7.jpg\";\nimport picture8 from \"./Card/images/picture8.jpg\";\nimport picture9 from \"./Card/images/picture9.jpg\";\nimport picture10 from \"./Card/images/picture10.jpg\";\nimport picture11 from \"./Card/images/picture11.jpg\";\nimport picture12 from \"./Card/images/picture12.jpg\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      debug: true,\n      score: 0,\n      imagesClicked: [],\n      pictureArray: [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function () {\n        return 0.5 - Math.random();\n      }),\n      best: 0\n    };\n\n    this.alreadyClicked = picture => {\n      const pictureShuffle = [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function () {\n        return 0.5 - Math.random();\n      });\n      this.setState({\n        pictureArray: pictureShuffle\n      });\n      const newPictures = [...this.state.imagesClicked, picture];\n      this.setState({\n        imagesClicked: newPictures\n      });\n\n      if (this.state.imagesClicked.indexOf(picture) === -1) {\n        const newScore = this.state.score;\n        this.setState({\n          score: newScore + 1\n        });\n\n        if (this.state.score >= this.state.best) {\n          this.setState({\n            best: newScore + 1\n          });\n        }\n      } else {\n        this.setState({\n          score: 0,\n          imagesClicked: []\n        });\n      }\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        className: \"clickyGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        score: this.state.score,\n        best: this.state.best,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Instructions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"picturesGoHere\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.pictureArray.map((pictureArr, i) => {\n        return React.createElement(Card, {\n          key: i + 1,\n          src: pictureArr,\n          alt: 'picture' + i,\n          onClick: () => this.alreadyClicked(pictureArr),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      })));\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tylercasperson/Desktop/FullStack/homework/NaturesCharmMemoryGame/src/App.js"],"names":["React","Component","NavBar","Instructions","Card","picture1","picture2","picture3","picture4","picture5","picture6","picture7","picture8","picture9","picture10","picture11","picture12","App","state","debug","score","imagesClicked","pictureArray","sort","Math","random","best","alreadyClicked","picture","pictureShuffle","setState","newPictures","indexOf","newScore","render","map","pictureArr","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEtBiB,KAFsB,GAGtB;AACIC,MAAAA,KAAK,EAAE,IADX;AAEIC,MAAAA,KAAK,EAAE,CAFX;AAGIC,MAAAA,aAAa,EAAE,EAHnB;AAIIC,MAAAA,YAAY,EAAE,CAACjB,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6DC,QAA7D,EAAuEC,QAAvE,EAAiFC,QAAjF,EAA2FC,SAA3F,EAAsGC,SAAtG,EAAiHC,SAAjH,EAA4HO,IAA5H,CAAiI,YAAW;AAAE,eAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AAA4B,OAA1K,CAJlB;AAKIC,MAAAA,IAAI,EAAE;AALV,KAHsB;;AAAA,SAWxBC,cAXwB,GAWNC,OAAD,IAAa;AAC5B,YAAMC,cAAc,GAAG,CAACxB,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6DC,QAA7D,EAAuEC,QAAvE,EAAiFC,QAAjF,EAA2FC,SAA3F,EAAsGC,SAAtG,EAAiHC,SAAjH,EAA4HO,IAA5H,CAAiI,YAAW;AAAE,eAAO,MAAMC,IAAI,CAACC,MAAL,EAAb;AAA4B,OAA1K,CAAvB;AACA,WAAKK,QAAL,CAAc;AAACR,QAAAA,YAAY,EAACO;AAAd,OAAd;AAEA,YAAME,WAAW,GAAG,CAAE,GAAG,KAAKb,KAAL,CAAWG,aAAhB,EAA+BO,OAA/B,CAApB;AACA,WAAKE,QAAL,CAAc;AAACT,QAAAA,aAAa,EAACU;AAAf,OAAd;;AAEA,UAAI,KAAKb,KAAL,CAAWG,aAAX,CAAyBW,OAAzB,CAAiCJ,OAAjC,MAA8C,CAAC,CAAnD,EAAsD;AACpD,cAAMK,QAAQ,GAAG,KAAKf,KAAL,CAAWE,KAA5B;AACA,aAAKU,QAAL,CAAc;AAACV,UAAAA,KAAK,EAACa,QAAQ,GAAC;AAAhB,SAAd;;AACA,YAAG,KAAKf,KAAL,CAAWE,KAAX,IAAkB,KAAKF,KAAL,CAAWQ,IAAhC,EAAqC;AACnC,eAAKI,QAAL,CAAc;AAACJ,YAAAA,IAAI,EAACO,QAAQ,GAAC;AAAf,WAAd;AACD;AACF,OAND,MAMO;AACL,aAAKH,QAAL,CAAc;AAACV,UAAAA,KAAK,EAAC,CAAP;AAAUC,UAAAA,aAAa,EAAE;AAAzB,SAAd;AACD;AACF,KA3BuB;;AAAA,SA6BxBa,MA7BwB,GA6Bf,MACT;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWE,KADpB;AAEE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWQ,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWI,YAAX,CAAwBa,GAAxB,CAA4B,CAACC,UAAD,EAAaC,CAAb,KAC3B;AACE,eACI,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,CAAC,GAAC,CADT;AAEE,UAAA,GAAG,EAAED,UAFP;AAGE,UAAA,GAAG,EAAE,YAAYC,CAHnB;AAIE,UAAA,OAAO,EAAE,MAAM,KAAKV,cAAL,CAAoBS,UAApB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,OAVF,CADH,CANF,CADF;AAsBD,KArDyB;AAAA;;AAAA;;AAwD5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './ClickyGame.css';\nimport NavBar from './NavBar';\nimport Instructions from './Instructions';\nimport Card from './Card';\nimport picture1 from \"./Card/images/picture1.jpg\";\nimport picture2 from \"./Card/images/picture2.jpg\";\nimport picture3 from \"./Card/images/picture3.jpg\";\nimport picture4 from \"./Card/images/picture4.jpg\";\nimport picture5 from \"./Card/images/picture5.jpg\";\nimport picture6 from \"./Card/images/picture6.jpg\";\nimport picture7 from \"./Card/images/picture7.jpg\";\nimport picture8 from \"./Card/images/picture8.jpg\";\nimport picture9 from \"./Card/images/picture9.jpg\";\nimport picture10 from \"./Card/images/picture10.jpg\";\nimport picture11 from \"./Card/images/picture11.jpg\";\nimport picture12 from \"./Card/images/picture12.jpg\";\nclass App extends Component {\n  \n      state =\n      {\n          debug: true,\n          score: 0,\n          imagesClicked: [],\n          pictureArray: [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function() { return 0.5 - Math.random() }),\n          best: 0\n      }\n\n    alreadyClicked = (picture) => {\n      const pictureShuffle = [picture1, picture2, picture3, picture4, picture5, picture6, picture7, picture8, picture9, picture10, picture11, picture12].sort(function() { return 0.5 - Math.random() });\n      this.setState({pictureArray:pictureShuffle});\n\n      const newPictures = [ ...this.state.imagesClicked, picture];\n      this.setState({imagesClicked:newPictures});   \n      \n      if((this.state.imagesClicked.indexOf(picture) === -1)){\n        const newScore = this.state.score;\n        this.setState({score:newScore+1})\n        if(this.state.score>=this.state.best){\n          this.setState({best:newScore+1})\n        }\n      } else {\n        this.setState({score:0, imagesClicked: []})\n      }\n    };\n\n    render = () =>\n    {\n    return (\n      <div className=\"clickyGame\">\n        <NavBar \n          score={this.state.score}\n          best={this.state.best}\n        />\n        <Instructions />\n        <div className=\"picturesGoHere\">\n          {this.state.pictureArray.map((pictureArr, i) =>\n            {\n              return(\n                  <Card\n                    key={i+1}\n                    src={pictureArr}\n                    alt={'picture' + i}\n                    onClick={() => this.alreadyClicked(pictureArr)}\n                  />\n              )\n            })}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}